.flex {
  display: flex;
  flex-flow: row wrap;
}
.flex-contenido-centrado {
  justify-content: center;
}
.flex-contenido-inicio {
  justify-content: flex-start;
}
.flex-contenido-final {
  justify-content: flex-end;
}
.flex-contenido-separado {
  justify-content: space-between;
}
.flex-contenido-alrededor {
  justify-content: space-around;
}
.flex-contenido-equidistante {
  justify-content: space-evenly;
}

// TODO: crear clases para align-items

.grid {
  display: grid;
}

@each $dispositivo, $configuracion in $columnas {
  @include mediaquery($dispositivo) {
    .flex {
      margin-right: calc(map-get($configuracion, 'espaciado') * -.5);
      margin-left: calc(map-get($configuracion, 'espaciado') * -.5);
      > [class^='columna-'],
      > [class*=" columna-"] {
        flex-basis: calc(100% - map-get($configuracion, 'espaciado'));
        max-width: calc(100% - map-get($configuracion, 'espaciado'));
        margin-left: map-get($configuracion, 'espaciado')*.5;
        margin-right: map-get($configuracion, 'espaciado')*.5;
      }
    }
    .grid {
      column-gap: map-get($configuracion, 'espaciado');
      grid-template-columns: repeat(map-get($configuracion, 'columnas'), 1fr);
      > [class^='columna-'],
      > [class*=" columna-"] {
        grid-column: span 16;
      }
    }
    .columns {
      column-gap: map-get($configuracion, 'espaciado');
    }
    @for $i from 1 through map-get($configuracion, 'columnas') {
      .flex > .columna-#{$i} {
        flex-basis: calc( ( $i / map-get($configuracion, 'columnas') * 100%) - map-get($configuracion, 'espaciado'));
        max-width: calc( ( $i / map-get($configuracion, 'columnas') * 100%) - map-get($configuracion, 'espaciado'));
      }
      .grid > .columna-#{$i} {
        grid-column: span $i;
      }
      .columns-#{$i} {
        column-count: $i;
      }
    }
  }
}

@each $dispositivo, $configuracion in $columnas {
  @include mediaquery($dispositivo) {
    @for $i from 1 through map-get($configuracion, 'columnas') {
      .flex > .columna-#{$i}-#{$dispositivo} {
        flex-basis: calc( ( $i / map-get($configuracion, 'columnas') * 100%) - map-get($configuracion, 'espaciado'));
        max-width: calc( ( $i / map-get($configuracion, 'columnas') * 100%) - map-get($configuracion, 'espaciado'));
        margin-left: map-get($configuracion, 'espaciado')*.5;
        margin-right: map-get($configuracion, 'espaciado')*.5;
      }
      .grid > .columna-#{$i}-#{$dispositivo} {
        grid-column: span $i;
      }
      .columns-#{$i}-#{$dispositivo} {
        column-count: $i;
      }
    }
  }
}
